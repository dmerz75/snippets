# -*- coding: utf-8 -*-
# contributor: Dale R. Merz Jr.
# name: mpl_label
# key: mpl_label
# group: mpl
# --
# mpl_label
for i in range(len(ax)):
    # # tick label size
    # ax[i] = plt.subplot(gs[0,i])
    # ax[i].yaxis.set_major_locator(my_locator)
    # ax[i].set_xlim()
    ax[i].set_ylim(0.3,1.01)
    if i == 0:
        pass
    else:
        ax[i].set_yticklabels('',visible=False)
    # for tick in ax.xaxis.get_major_ticks():
    #     tick.label.set_fontsize(14)
    #     # specify integer or one of preset strings, e.g.
    #     #tick.label.set_fontsize('x-small')
    #     tick.label.set_rotation('vertical')
    # ax[i].yaxis(sharey=True)
    # ax[i].tick_params()
    # time.sleep(2)
    ax[i].tick_params(axis='both',labelsize=8.0)
    # yticklabels = ax[i].get_yticklabels()
    # setp(yticklabels, fontsize=8.0)
    # xticklabels = ax[i].get_xticklabels()
    # setp(xticklabels, fontsize=8.0)

# plt.title('RMSD')
# Y
plt.ylabel("Force (pN)")
ax1.set_ylim(-12,342)

# X
if plot_type == 'extension':
    plt.xlabel('Extension (nm)')
    ax1.set_xlim(-2,82)
elif plot_type == 'time':
    plt.xlabel('t (ms)')
    ax1.set_xlim(-0.5,38)
elif plot_type == 'frame':
    plt.xlabel('Frame # (x 1000)')
    ax1.set_xlim(-0.5,9.5)
    plt.xticks(np.linspace(0,9.0,19),fontsize=10)
    # ax3.set_xticks(np.linspace(0,32.0,17))
    # # Changing the label's font-size
    # ax1.tick_params(axis='x',labelsize=8)
    # ax2.tick_params(axis='x',labelsize=8)
    # ax3.tick_params(axis='x',labelsize=8)
